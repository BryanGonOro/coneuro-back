Preguntar como se hace la entrega del medicamento, quien hace las solicitudes y como, cuando se da por salida.

Para generar el secret JWT
node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"

-------FALTA ESTO----------------
Solicitudes de productos
El personal asistencial podrá generar solicitudes de insumos o medicamentos desde las áreas.

GET /api/solicitudes: Lista todas las solicitudes de insumos y medicamentos realizadas.
GET /api/solicitudes/
: Obtiene los detalles de una solicitud específica (número de solicitud, cama del paciente, usuario que solicita, medicamentos solicitados, etc.).
POST /api/solicitudes: Crea una nueva solicitud de insumos o medicamentos. El personal asistencial usará este endpoint para realizar solicitudes desde las áreas clínicas.
PUT /api/solicitudes/
: Actualiza el estado de una solicitud (ej. "despachado", "cancelado").
DELETE /api/solicitudes/
: Cancela una solicitud pendiente. Se debe incluir el motivo de la cancelación.

coneuro@coneurosas.com
Coneuro2024
------------FALTA ESTO-----------

DE AQUI HAY QUE VER LO DE CONTRATACION

-- Tabla de Pacientes
CREATE TABLE pacientes (
    id_paciente SERIAL PRIMARY KEY,
    nombre VARCHAR(100),
    apellido VARCHAR(100),
    fecha_nacimiento DATE,
    genero VARCHAR(10),
    direccion VARCHAR(255),
    telefono VARCHAR(20),
    email VARCHAR(100)
);

-- Tabla de Profesionales de la Salud
CREATE TABLE profesionales_salud (
    id_profesional SERIAL PRIMARY KEY,
    nombre VARCHAR(100),
    apellido VARCHAR(100),
    especialidad VARCHAR(50),
    numero_licencia VARCHAR(20),
    telefono VARCHAR(20),
    email VARCHAR(100)
);

-- Tabla de Servicios de Salud
CREATE TABLE servicios_salud (
    id_servicio SERIAL PRIMARY KEY,
    codigo_cups VARCHAR(10),
    descripcion VARCHAR(255),
    tarifa DECIMAL(10, 2)
);

-- Tabla de Facturas
CREATE TABLE facturas (
    id_factura SERIAL PRIMARY KEY,
    id_paciente INT REFERENCES pacientes(id_paciente),
    fecha_emision DATE,
    total DECIMAL(10, 2)
);

-- Tabla de Autorizaciones
CREATE TABLE autorizaciones (
    id_autorizacion SERIAL PRIMARY KEY,
    id_paciente INT REFERENCES pacientes(id_paciente),
    id_servicio INT REFERENCES servicios_salud(id_servicio),
    fecha_autorizacion DATE,
    estado VARCHAR(20)
);

-- Tabla de Pagos
CREATE TABLE pagos (
    id_pago SERIAL PRIMARY KEY,
    id_factura INT REFERENCES facturas(id_factura),
    fecha_pago DATE,
    monto DECIMAL(10, 2),
    metodo_pago VARCHAR(50)
);

-- Tabla de Contratos/Convenios
CREATE TABLE contratos_convenios (
    id_contrato SERIAL PRIMARY KEY,
    id_profesional INT REFERENCES profesionales_salud(id_profesional),
    id_servicio INT REFERENCES servicios_salud(id_servicio),
    fecha_inicio DATE,
    fecha_fin DATE,
    condiciones TEXT
);

-- Tabla de Recursos Utilizados
CREATE TABLE recursos_utilizados (
    id_recurso SERIAL PRIMARY KEY,
    id_servicio INT REFERENCES servicios_salud(id_servicio),
    tipo_recurso VARCHAR(50),
    cantidad INT,
    costo_unitario DECIMAL(10, 2)
);

CREATE TABLE Servicios (
    id SERIAL PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL, -- Nombre del servicio prestado
    descripcion TEXT NOT NULL, -- Descripción del servicio
    valor INTEGER NOT NULL, -- Valor del servicio
    contrato_id INTEGER REFERENCES Contratos(id), -- Relación con Contratos
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

CREATE TABLE Bodegas (
    id SERIAL PRIMARY KEY,
    producto VARCHAR(100) NOT NULL, -- Nombre del producto
    cantidad_total INTEGER NOT NULL, -- Cantidad disponible
    cantidad_minima INTEGER, -- Existencia mínima para alertas
    fecha_vencimiento DATE, -- Fecha de vencimiento del lote
    lote VARCHAR(50),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);




https://excalidraw.com/#json=g_W1yKce06w8jORZL6PBS,6AcIlqlxxcChMpQNJfL3og